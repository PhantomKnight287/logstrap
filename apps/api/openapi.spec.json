{
  "openapi": "3.0.0",
  "paths": {
    "/": {
      "get": {
        "operationId": "AppController_getHello",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericErrorEntity"
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "operationId": "AuthController_login",
        "summary": "Login",
        "description": "Login",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginSuccessfulEntity"
                }
              }
            }
          },
          "400": {
            "description": "Invalid body",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericErrorEntity"
                }
              }
            }
          },
          "401": {
            "description": "Incorrect email or password",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericErrorEntity"
                }
              }
            }
          },
          "404": {
            "description": "No user found with given email",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericErrorEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericErrorEntity"
                }
              }
            }
          }
        },
        "tags": [
          "Authentication"
        ]
      }
    },
    "/auth/register": {
      "post": {
        "operationId": "AuthController_register",
        "summary": "Register",
        "description": "Regsiter",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterSuccessfulEntity"
                }
              }
            }
          },
          "400": {
            "description": "Invalid body",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericErrorEntity"
                }
              }
            }
          },
          "409": {
            "description": "Email already taken",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericErrorEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericErrorEntity"
                }
              }
            }
          }
        },
        "tags": [
          "Authentication"
        ]
      }
    },
    "/auth/@me": {
      "get": {
        "operationId": "AuthController_hydrate",
        "summary": "Get current user",
        "description": "Get current user",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserEntity"
                }
              }
            }
          },
          "404": {
            "description": "No user found with given token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericErrorEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericErrorEntity"
                }
              }
            }
          }
        },
        "tags": [
          "Authentication"
        ],
        "security": [
          {
            "JWT-auth": []
          }
        ]
      }
    },
    "/projects": {
      "post": {
        "operationId": "ProjectsController_create",
        "summary": "Create new project",
        "description": "Create new project",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProjectDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectIdEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericErrorEntity"
                }
              }
            }
          }
        },
        "tags": [
          "Projects"
        ],
        "security": [
          {
            "JWT-auth": []
          }
        ]
      },
      "get": {
        "operationId": "ProjectsController_findAll",
        "summary": "Fetch all projects",
        "description": "Fetch all projects",
        "parameters": [
          {
            "name": "page",
            "required": true,
            "in": "query",
            "description": "The no of page",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "The no of items to fetch, defaults to 6",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FetchAllProjectsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericErrorEntity"
                }
              }
            }
          }
        },
        "tags": [
          "Projects"
        ],
        "security": [
          {
            "JWT-auth": []
          }
        ]
      }
    },
    "/projects/{id}": {
      "get": {
        "operationId": "ProjectsController_findOne",
        "summary": "Find a project with id",
        "description": "Find a project with id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "The id of the project",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Project found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              }
            }
          },
          "404": {
            "description": "Project not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericErrorEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericErrorEntity"
                }
              }
            }
          }
        },
        "tags": [
          "Projects"
        ],
        "security": [
          {
            "JWT-auth": []
          }
        ]
      },
      "patch": {
        "operationId": "ProjectsController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProjectDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericErrorEntity"
                }
              }
            }
          }
        },
        "tags": [
          "Projects"
        ],
        "security": [
          {
            "JWT-auth": []
          }
        ]
      },
      "delete": {
        "operationId": "ProjectsController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericErrorEntity"
                }
              }
            }
          }
        },
        "tags": [
          "Projects"
        ],
        "security": [
          {
            "JWT-auth": []
          }
        ]
      }
    },
    "/projects/{id}/keys": {
      "post": {
        "operationId": "KeysController_create",
        "summary": "Create a new API key",
        "description": "Create a new API Key",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Id of the project",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateKeyDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateKeyResponse"
                }
              }
            }
          },
          "403": {
            "description": "Tried creating a 'live' key without verified email",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericErrorEntity"
                }
              }
            }
          },
          "404": {
            "description": "No project found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericErrorEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericErrorEntity"
                }
              }
            }
          }
        },
        "tags": [
          "Keys"
        ]
      },
      "get": {
        "operationId": "KeysController_findAll",
        "summary": "Fetch all keys related to project",
        "description": "Fetch all keys related to project",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Id of the project",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FetchAllKeysResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericErrorEntity"
                }
              }
            }
          }
        },
        "tags": [
          "Keys"
        ]
      }
    },
    "/projects/{id}/keys/{id}": {
      "get": {
        "operationId": "KeysController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Id of the project",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericErrorEntity"
                }
              }
            }
          }
        },
        "tags": [
          "Keys"
        ]
      },
      "patch": {
        "operationId": "KeysController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Id of the project",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateKeyDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericErrorEntity"
                }
              }
            }
          }
        },
        "tags": [
          "Keys"
        ]
      },
      "delete": {
        "operationId": "KeysController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Id of the project",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericErrorEntity"
                }
              }
            }
          }
        },
        "tags": [
          "Keys"
        ]
      }
    }
  },
  "info": {
    "title": "LogsTrap",
    "description": "A functional logging solution",
    "version": "1.0",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "securitySchemes": {
      "JWT-auth": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http",
        "name": "JWT",
        "description": "Enter JWT token",
        "in": "header",
        "x-tokenName": "Token"
      }
    },
    "schemas": {
      "LoginDTO": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "UserEntity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "description": "ISO8601 timestamp"
          },
          "walletBalance": {
            "type": "string",
            "description": "a decimal with precision upto 2 digits"
          },
          "emailVerified": {
            "type": "boolean"
          }
        },
        "required": [
          "id",
          "name",
          "createdAt",
          "walletBalance",
          "emailVerified"
        ]
      },
      "LoginSuccessfulEntity": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/UserEntity"
          },
          "token": {
            "type": "string",
            "description": "JWT token"
          }
        },
        "required": [
          "user",
          "token"
        ]
      },
      "GenericErrorEntity": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        },
        "required": [
          "message"
        ]
      },
      "RegisterDTO": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "email",
          "password",
          "name"
        ]
      },
      "RegisterSuccessfulEntity": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/UserEntity"
          },
          "token": {
            "type": "string",
            "description": "JWT token"
          }
        },
        "required": [
          "user",
          "token"
        ]
      },
      "CreateProjectDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      },
      "ProjectIdEntity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "required": [
          "id"
        ]
      },
      "ProjectMode": {
        "type": "string",
        "enum": [
          "test",
          "live"
        ]
      },
      "Project": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "mode": {
            "$ref": "#/components/schemas/ProjectMode"
          }
        },
        "required": [
          "id",
          "name",
          "mode"
        ]
      },
      "FetchAllProjectsResponse": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Project"
            }
          },
          "totalItems": {
            "type": "number"
          },
          "itemsPerQuery": {
            "type": "number",
            "default": 6
          }
        },
        "required": [
          "items",
          "totalItems",
          "itemsPerQuery"
        ]
      },
      "UpdateProjectDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        }
      },
      "CreateKeyDto": {
        "type": "object",
        "properties": {
          "mode": {
            "$ref": "#/components/schemas/ProjectMode"
          },
          "description": {
            "type": "string",
            "description": "Description for the key"
          },
          "name": {
            "type": "string",
            "description": "Name of the API Key, will be used for searching and sorting"
          }
        },
        "required": [
          "mode",
          "name"
        ]
      },
      "CreateKeyResponse": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "API Key, must be stored as it can't be seen again"
          },
          "id": {
            "type": "string",
            "description": "Id of key in db"
          }
        },
        "required": [
          "key",
          "id"
        ]
      },
      "Key": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "projectId": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "mode": {
            "$ref": "#/components/schemas/ProjectMode"
          }
        },
        "required": [
          "id",
          "projectId",
          "createdAt",
          "mode"
        ]
      },
      "FetchAllKeysResponse": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Key"
            }
          },
          "totalItems": {
            "type": "number"
          },
          "itemsPerQuery": {
            "type": "number",
            "default": 6
          }
        },
        "required": [
          "items",
          "totalItems",
          "itemsPerQuery"
        ]
      },
      "UpdateKeyDto": {
        "type": "object",
        "properties": {
          "mode": {
            "$ref": "#/components/schemas/ProjectMode"
          },
          "description": {
            "type": "string",
            "description": "Description for the key"
          },
          "name": {
            "type": "string",
            "description": "Name of the API Key, will be used for searching and sorting"
          }
        }
      }
    }
  }
}