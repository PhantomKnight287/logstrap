{
  "openapi": "3.0.0",
  "paths": {
    "/": {
      "get": {
        "operationId": "AppController_getHello",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericErrorEntity"
                }
              }
            }
          }
        }
      }
    },
    "/2": {
      "get": {
        "operationId": "AppController_getHello2",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericErrorEntity"
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "operationId": "AuthController_login",
        "summary": "Login",
        "description": "Login",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginSuccessfulEntity"
                }
              }
            }
          },
          "400": {
            "description": "Invalid body",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericErrorEntity"
                }
              }
            }
          },
          "401": {
            "description": "Incorrect email or password",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericErrorEntity"
                }
              }
            }
          },
          "404": {
            "description": "No user found with given email",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericErrorEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericErrorEntity"
                }
              }
            }
          }
        },
        "tags": [
          "Authentication"
        ]
      }
    },
    "/auth/register": {
      "post": {
        "operationId": "AuthController_register",
        "summary": "Register",
        "description": "Regsiter",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterSuccessfulEntity"
                }
              }
            }
          },
          "400": {
            "description": "Invalid body",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericErrorEntity"
                }
              }
            }
          },
          "409": {
            "description": "Email already taken",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericErrorEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericErrorEntity"
                }
              }
            }
          }
        },
        "tags": [
          "Authentication"
        ]
      }
    },
    "/auth/@me": {
      "get": {
        "operationId": "AuthController_hydrate",
        "summary": "Get current user",
        "description": "Get current user",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserEntity"
                }
              }
            }
          },
          "404": {
            "description": "No user found with given token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericErrorEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericErrorEntity"
                }
              }
            }
          }
        },
        "tags": [
          "Authentication"
        ],
        "security": [
          {
            "JWT-auth": []
          }
        ]
      }
    },
    "/projects": {
      "post": {
        "operationId": "ProjectsController_create",
        "summary": "Create new project",
        "description": "Create new project",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProjectDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectIdEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericErrorEntity"
                }
              }
            }
          }
        },
        "tags": [
          "Projects"
        ],
        "security": [
          {
            "JWT-auth": []
          }
        ]
      },
      "get": {
        "operationId": "ProjectsController_findAll",
        "summary": "Fetch all projects",
        "description": "Fetch all projects",
        "parameters": [
          {
            "name": "page",
            "required": true,
            "in": "query",
            "description": "The no of page",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "The no of items to fetch, defaults to 6",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FetchAllProjectsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericErrorEntity"
                }
              }
            }
          }
        },
        "tags": [
          "Projects"
        ],
        "security": [
          {
            "JWT-auth": []
          }
        ]
      }
    },
    "/projects/{id}": {
      "get": {
        "operationId": "ProjectsController_findOne",
        "summary": "Find a project with id",
        "description": "Find a project with id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "The id of the project",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Project found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              }
            }
          },
          "404": {
            "description": "Project not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericErrorEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericErrorEntity"
                }
              }
            }
          }
        },
        "tags": [
          "Projects"
        ],
        "security": [
          {
            "JWT-auth": []
          }
        ]
      }
    },
    "/projects/{id}/api-request-search-filters": {
      "get": {
        "operationId": "ProjectsController_getProjectApiRequestSearchFilters",
        "summary": "Get project api request search filters",
        "description": "Get project api request search filters",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "The id of the project",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectApiRequestSearchFiltersResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericErrorEntity"
                }
              }
            }
          }
        },
        "tags": [
          "Projects"
        ],
        "security": [
          {
            "JWT-auth": []
          }
        ]
      }
    },
    "/projects/{id}/application-logs-search-filters": {
      "get": {
        "operationId": "ProjectsController_getProjectApplicationLogsSearchFilters",
        "summary": "Get project application logs search filters",
        "description": "Get project application logs search filters",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "The id of the project",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectApplicationLogsSearchFiltersResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericErrorEntity"
                }
              }
            }
          }
        },
        "tags": [
          "Projects"
        ],
        "security": [
          {
            "JWT-auth": []
          }
        ]
      }
    },
    "/projects/{id}/keys": {
      "post": {
        "operationId": "KeysController_create",
        "summary": "Create a new API key",
        "description": "Create a new API Key",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Id of the project",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateKeyDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateKeyResponse"
                }
              }
            }
          },
          "403": {
            "description": "Tried creating a 'live' key without verified email",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericErrorEntity"
                }
              }
            }
          },
          "404": {
            "description": "No project found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericErrorEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericErrorEntity"
                }
              }
            }
          }
        },
        "tags": [
          "Keys"
        ]
      },
      "get": {
        "operationId": "KeysController_findAll",
        "summary": "Fetch all keys related to project",
        "description": "Fetch all keys related to project",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Id of the project",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FetchAllKeysResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericErrorEntity"
                }
              }
            }
          }
        },
        "tags": [
          "Keys"
        ]
      }
    },
    "/projects/{id}/keys/{id}": {
      "get": {
        "operationId": "KeysController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Id of the project",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericErrorEntity"
                }
              }
            }
          }
        },
        "tags": [
          "Keys"
        ]
      },
      "patch": {
        "operationId": "KeysController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Id of the project",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateKeyDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericErrorEntity"
                }
              }
            }
          }
        },
        "tags": [
          "Keys"
        ]
      },
      "delete": {
        "operationId": "KeysController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Id of the project",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericErrorEntity"
                }
              }
            }
          }
        },
        "tags": [
          "Keys"
        ]
      }
    },
    "/projects/{id}/logs": {
      "post": {
        "operationId": "LogsController_create",
        "summary": "Create Logs",
        "description": "Create logs",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Id of project",
            "schema": {}
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateLogDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericErrorEntity"
                }
              }
            }
          }
        },
        "tags": [
          "Logs"
        ],
        "security": [
          {
            "Api-Key": []
          }
        ]
      }
    },
    "/projects/{id}/request-logs": {
      "get": {
        "operationId": "LogsController_getRequestLogs",
        "summary": "Get requests logs for a project",
        "description": "Get requests logs for a project",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Id of project",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": true,
            "in": "query",
            "description": "The no of page",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "The no of items to fetch, defaults to 6",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "required": false,
            "in": "query",
            "description": "The search query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apiKey",
            "required": false,
            "in": "query",
            "description": "The api keys",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "fromDate",
            "required": false,
            "in": "query",
            "description": "The from date",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "toDate",
            "required": false,
            "in": "query",
            "description": "The to date",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "method",
            "required": false,
            "in": "query",
            "description": "The method",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "statusCode",
            "required": false,
            "in": "query",
            "description": "The status code",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FetchRequestLogsResponseEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericErrorEntity"
                }
              }
            }
          }
        },
        "tags": [
          "Logs"
        ],
        "security": [
          {
            "JWT-auth": []
          }
        ]
      }
    },
    "/projects/{id}/request-logs/{logId}": {
      "get": {
        "operationId": "LogsController_getRequestLog",
        "summary": "Get a request log by id",
        "description": "Get a request log by id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Id of request log",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "logId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogEntity"
                }
              }
            }
          },
          "404": {
            "description": "Log or Project not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericErrorEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericErrorEntity"
                }
              }
            }
          }
        },
        "tags": [
          "Logs"
        ],
        "security": [
          {
            "JWT-auth": []
          }
        ]
      }
    },
    "/projects/{id}/application-logs": {
      "get": {
        "operationId": "LogsController_getApplicationLogs",
        "summary": "Get application logs for a project",
        "description": "Get application logs for a project",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Id of project",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": true,
            "in": "query",
            "description": "The no of page",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "The no of items to fetch, defaults to 6",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "required": false,
            "in": "query",
            "description": "The search query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fromDate",
            "required": false,
            "in": "query",
            "description": "The from date",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "toDate",
            "required": false,
            "in": "query",
            "description": "The to date",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "level",
            "required": false,
            "in": "query",
            "description": "The level",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "apiKey",
            "required": false,
            "in": "query",
            "description": "The api keys",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "component",
            "required": false,
            "in": "query",
            "description": "The component",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "functionName",
            "required": false,
            "in": "query",
            "description": "The function name",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FetchApplicationLogsResponseEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericErrorEntity"
                }
              }
            }
          }
        },
        "tags": [
          "Logs"
        ],
        "security": [
          {
            "JWT-auth": []
          }
        ]
      }
    },
    "/projects/{id}/application-logs/{logId}": {
      "get": {
        "operationId": "LogsController_getApplicationLog",
        "summary": "Get an application log by id",
        "description": "Get an application log by id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Id of project",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "logId",
            "required": true,
            "in": "path",
            "description": "Id of log",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExtendedApplicationLogEntity"
                }
              }
            }
          },
          "404": {
            "description": "Log or Project not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericErrorEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericErrorEntity"
                }
              }
            }
          }
        },
        "tags": [
          "Logs"
        ],
        "security": [
          {
            "JWT-auth": []
          }
        ]
      }
    }
  },
  "info": {
    "title": "LogsTrap",
    "description": "A functional logging solution",
    "version": "1.0",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "securitySchemes": {
      "JWT-auth": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http",
        "name": "JWT",
        "description": "Enter JWT token",
        "in": "header",
        "x-tokenName": "Token"
      },
      "Api-Key": {
        "type": "apiKey",
        "in": "header",
        "name": "x-api-key"
      }
    },
    "schemas": {
      "LoginDTO": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "UserEntity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "description": "ISO8601 timestamp"
          },
          "walletBalance": {
            "type": "string",
            "description": "a decimal with precision upto 2 digits"
          },
          "emailVerified": {
            "type": "boolean"
          }
        },
        "required": [
          "id",
          "name",
          "createdAt",
          "walletBalance",
          "emailVerified"
        ]
      },
      "LoginSuccessfulEntity": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/UserEntity"
          },
          "token": {
            "type": "string",
            "description": "JWT token"
          }
        },
        "required": [
          "user",
          "token"
        ]
      },
      "GenericErrorEntity": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        },
        "required": [
          "message"
        ]
      },
      "RegisterDTO": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "email",
          "password",
          "name"
        ]
      },
      "RegisterSuccessfulEntity": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/UserEntity"
          },
          "token": {
            "type": "string",
            "description": "JWT token"
          }
        },
        "required": [
          "user",
          "token"
        ]
      },
      "CreateProjectDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      },
      "ProjectIdEntity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "required": [
          "id"
        ]
      },
      "ProjectMode": {
        "type": "string",
        "enum": [
          "test",
          "live"
        ]
      },
      "Project": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "mode": {
            "$ref": "#/components/schemas/ProjectMode"
          }
        },
        "required": [
          "id",
          "name",
          "mode"
        ]
      },
      "FetchAllProjectsResponse": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Project"
            }
          },
          "totalItems": {
            "type": "number"
          },
          "itemsPerQuery": {
            "type": "number",
            "default": 6
          }
        },
        "required": [
          "items",
          "totalItems",
          "itemsPerQuery"
        ]
      },
      "PartialApiKeyEntity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "ProjectApiRequestSearchFiltersResponse": {
        "type": "object",
        "properties": {
          "statusCodes": {
            "description": "List of available status codes",
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "methods": {
            "description": "List of available methods",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "apiKeys": {
            "description": "List of available api keys",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PartialApiKeyEntity"
            }
          }
        },
        "required": [
          "statusCodes",
          "methods",
          "apiKeys"
        ]
      },
      "ProjectApplicationLogsSearchFiltersResponse": {
        "type": "object",
        "properties": {
          "logLevels": {
            "description": "List of available log levels",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "components": {
            "description": "List of available components",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "functionNames": {
            "description": "List of available function names",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "logLevels",
          "components",
          "functionNames"
        ]
      },
      "CreateKeyDto": {
        "type": "object",
        "properties": {
          "mode": {
            "$ref": "#/components/schemas/ProjectMode"
          },
          "description": {
            "type": "string",
            "description": "Description for the key"
          },
          "name": {
            "type": "string",
            "description": "Name of the API Key, will be used for searching and sorting"
          }
        },
        "required": [
          "mode",
          "name"
        ]
      },
      "CreateKeyResponse": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "API Key, must be stored as it can't be seen again"
          },
          "id": {
            "type": "string",
            "description": "Id of key in db"
          }
        },
        "required": [
          "key",
          "id"
        ]
      },
      "Key": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "projectId": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "mode": {
            "$ref": "#/components/schemas/ProjectMode"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "projectId",
          "createdAt",
          "mode",
          "name"
        ]
      },
      "FetchAllKeysResponse": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Key"
            }
          },
          "totalItems": {
            "type": "number"
          },
          "itemsPerQuery": {
            "type": "number",
            "default": 6
          }
        },
        "required": [
          "items",
          "totalItems",
          "itemsPerQuery"
        ]
      },
      "UpdateKeyDto": {
        "type": "object",
        "properties": {
          "mode": {
            "$ref": "#/components/schemas/ProjectMode"
          },
          "description": {
            "type": "string",
            "description": "Description for the key"
          },
          "name": {
            "type": "string",
            "description": "Name of the API Key, will be used for searching and sorting"
          }
        }
      },
      "LogLevel": {
        "type": "string",
        "description": "Log level",
        "enum": [
          "debug",
          "info",
          "warn",
          "error",
          "fatal",
          "log",
          "trace"
        ]
      },
      "CreateApplicationLogDto": {
        "type": "object",
        "properties": {
          "timestamp": {
            "type": "string",
            "description": "Timestamp of the log entry",
            "format": "date-time"
          },
          "level": {
            "$ref": "#/components/schemas/LogLevel"
          },
          "message": {
            "type": "string",
            "description": "Log message"
          },
          "component": {
            "type": "string",
            "description": "Component that generated the log"
          },
          "functionName": {
            "type": "string",
            "description": "Function name where the log was generated"
          },
          "additionalInfo": {
            "type": "object",
            "description": "Additional information"
          }
        },
        "required": [
          "level",
          "message"
        ]
      },
      "RequestLogDTO": {
        "type": "object",
        "properties": {
          "timestamp": {
            "type": "date-time",
            "description": "timestamp when log was created"
          },
          "timeTaken": {
            "type": "number",
            "description": "Time taken for your service to send response"
          },
          "method": {
            "type": "string",
            "description": "Request method"
          },
          "url": {
            "type": "string",
            "description": "The url where request was made(/api/v1..., https://api.com/v1/)"
          },
          "statusCode": {
            "type": "number",
            "description": "Status code of this request"
          },
          "requestBody": {
            "type": "object",
            "description": "The request body(only supports json)"
          },
          "responseBody": {
            "type": "object",
            "description": "The response body(only supports json)"
          },
          "requestHeaders": {
            "type": "object",
            "description": "The request headers(only supports json)"
          },
          "responseHeaders": {
            "type": "object",
            "description": "The response headers(only supports json)"
          },
          "cookies": {
            "type": "object",
            "description": "The request cookies(only supports json)"
          },
          "ip": {
            "type": "string",
            "description": "The ip from where the request was made"
          },
          "userAgent": {
            "type": "string",
            "description": "The user agent from where the request was made"
          },
          "applicationLogs": {
            "description": "Application Logs related to this request",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateApplicationLogDto"
            }
          }
        },
        "required": [
          "method",
          "url",
          "statusCode"
        ]
      },
      "CreateSystemLogDto": {
        "type": "object",
        "properties": {
          "timestamp": {
            "type": "string",
            "description": "Timestamp of the log entry",
            "format": "date-time"
          },
          "level": {
            "$ref": "#/components/schemas/LogLevel"
          },
          "message": {
            "type": "string",
            "description": "Log message"
          },
          "eventType": {
            "type": "string",
            "description": "Type of system event"
          },
          "details": {
            "type": "object",
            "description": "Additional details"
          }
        },
        "required": [
          "level",
          "message"
        ]
      },
      "CreateLogDto": {
        "type": "object",
        "properties": {
          "requests": {
            "description": "Requests associated to this log",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RequestLogDTO"
            }
          },
          "applicationLogs": {
            "description": "Application logs",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateApplicationLogDto"
            }
          },
          "systemLogs": {
            "description": "System logs(like when a process crashes)",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateSystemLogDto"
            }
          }
        }
      },
      "PartialRequestLogEntity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "userAgent": {
            "type": "string"
          },
          "applicationLogsCount": {
            "type": "number"
          },
          "method": {
            "type": "string"
          },
          "statusCode": {
            "type": "number"
          },
          "apiKeyId": {
            "type": "string"
          },
          "projectId": {
            "type": "string"
          },
          "timeTaken": {
            "type": "string"
          },
          "apiKeyName": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "url",
          "timestamp",
          "userAgent",
          "applicationLogsCount",
          "method",
          "statusCode",
          "apiKeyId",
          "projectId"
        ]
      },
      "FetchRequestLogsResponseEntity": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PartialRequestLogEntity"
            }
          },
          "totalItems": {
            "type": "number"
          },
          "itemsPerQuery": {
            "type": "number",
            "default": 6
          }
        },
        "required": [
          "items",
          "totalItems",
          "itemsPerQuery"
        ]
      },
      "ApplicationLogEntity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "level": {
            "type": "string",
            "enum": [
              "debug",
              "info",
              "warn",
              "error",
              "fatal",
              "log",
              "trace"
            ]
          },
          "message": {
            "type": "string"
          },
          "timestamp": {
            "format": "date-time",
            "type": "string"
          },
          "additionalInfo": {
            "type": "object"
          },
          "functionName": {
            "type": "string"
          },
          "component": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "level",
          "message",
          "timestamp"
        ]
      },
      "LogEntity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "userAgent": {
            "type": "string"
          },
          "applicationLogsCount": {
            "type": "number"
          },
          "method": {
            "type": "string"
          },
          "statusCode": {
            "type": "number"
          },
          "apiKeyId": {
            "type": "string"
          },
          "projectId": {
            "type": "string"
          },
          "timeTaken": {
            "type": "string"
          },
          "apiKeyName": {
            "type": "string"
          },
          "requestBody": {
            "type": "object"
          },
          "responseBody": {
            "type": "object"
          },
          "requestHeaders": {
            "type": "object"
          },
          "responseHeaders": {
            "type": "object"
          },
          "cookies": {
            "type": "object"
          },
          "ip": {
            "type": "string"
          },
          "applicationLogs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApplicationLogEntity"
            }
          }
        },
        "required": [
          "id",
          "url",
          "timestamp",
          "userAgent",
          "applicationLogsCount",
          "method",
          "statusCode",
          "projectId",
          "requestBody"
        ]
      },
      "PartialApplicationLogEntity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "level": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "component": {
            "type": "string"
          },
          "functionName": {
            "type": "string"
          },
          "additionalInfo": {
            "type": "object"
          },
          "requestId": {
            "type": "string"
          },
          "projectId": {
            "type": "string"
          },
          "apiKeyId": {
            "type": "string"
          },
          "apiKeyName": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "timestamp",
          "level",
          "message",
          "component",
          "functionName",
          "additionalInfo",
          "requestId",
          "projectId",
          "apiKeyId",
          "apiKeyName"
        ]
      },
      "FetchApplicationLogsResponseEntity": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PartialApplicationLogEntity"
            }
          },
          "totalItems": {
            "type": "number"
          },
          "itemsPerQuery": {
            "type": "number",
            "default": 6
          }
        },
        "required": [
          "items",
          "totalItems",
          "itemsPerQuery"
        ]
      },
      "LogEntityWithIdAndUrl": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "url"
        ]
      },
      "ExtendedApplicationLogEntity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "level": {
            "type": "string",
            "enum": [
              "debug",
              "info",
              "warn",
              "error",
              "fatal",
              "log",
              "trace"
            ]
          },
          "message": {
            "type": "string"
          },
          "timestamp": {
            "format": "date-time",
            "type": "string"
          },
          "additionalInfo": {
            "type": "object"
          },
          "functionName": {
            "type": "string"
          },
          "component": {
            "type": "string"
          },
          "apiKey": {
            "$ref": "#/components/schemas/PartialApiKeyEntity"
          },
          "requestLog": {
            "$ref": "#/components/schemas/LogEntityWithIdAndUrl"
          }
        },
        "required": [
          "id",
          "level",
          "message",
          "timestamp",
          "apiKey",
          "requestLog"
        ]
      }
    }
  }
}