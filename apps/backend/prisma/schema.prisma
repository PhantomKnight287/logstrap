// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String @id @unique
  name     String
  username String @unique
  password String

  projects Project[]

  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
}

model Project {
  id          String  @id @unique
  name        String
  description String?

  keys ApiKey[]

  user   User?   @relation(fields: [userId], references: [id])
  userId String?

  logs Log[]

  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
}

model ApiKey {
  id   String @id @unique
  name String
  key  String @unique

  project   Project? @relation(fields: [projectId], references: [id])
  projectId String?

  logs Log[]

  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
}

model Log {
  id String @id @unique

  statusCode Int?
  message    String?
  path       String?

  requestHeaders Json?
  requestBody    String?
  requestTime    DateTime?

  responseHeaders Json?
  responseBody    String?
  responseTime    DateTime?

  stackTrace String?

  key      ApiKey @relation(fields: [apiKeyId], references: [id])
  apiKeyId String

  project   Project @relation(fields: [projectId], references: [id])
  projectId String

  method String?

  type RequestType?

  name String?

  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
}

enum RequestType {
  Failed
  Successful
}
